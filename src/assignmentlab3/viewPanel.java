/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package assignmentlab3;

import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
//import javax.management.StringValueExp;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.plaf.metal.MetalBorders;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.User;
import model.UserDirectory;

/**
 *
 * @author Pc
 */
public final class viewPanel extends javax.swing.JPanel {

    /**
     * Creates new form viewPanel
     */
    JPanel bottomPanel;
    UserDirectory users;

    public viewPanel(JPanel bottomPanel, UserDirectory users) {
        initComponents();
        this.bottomPanel = bottomPanel;
        this.users = users;
        poplutateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        viewBottun = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        contactinfoLable = new javax.swing.JLabel();
        startdateField = new javax.swing.JTextField();
        employeeidlabel = new javax.swing.JLabel();
        levelField = new javax.swing.JTextField();
        agelabel = new javax.swing.JLabel();
        cellphoneField = new javax.swing.JTextField();
        startdateLabel = new javax.swing.JLabel();
        photoField = new javax.swing.JTextField();
        levelLabel = new javax.swing.JLabel();
        emailLable = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        CellphonLabel = new javax.swing.JLabel();
        PhotoLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        genderField = new javax.swing.JTextField();
        employeeidField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        ageField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        searchLable = new javax.swing.JLabel();
        picLabel = new javax.swing.JTextField();

        titleLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(51, 153, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("EMPLOYEE'S INFORMATION");

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "EMPID", "LEVEL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(userTable);
        if (userTable.getColumnModel().getColumnCount() > 0) {
            userTable.getColumnModel().getColumn(0).setResizable(false);
            userTable.getColumnModel().getColumn(1).setResizable(false);
            userTable.getColumnModel().getColumn(2).setResizable(false);
        }

        viewBottun.setText("VIEW");
        viewBottun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBottunActionPerformed(evt);
            }
        });

        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        contactinfoLable.setBackground(new java.awt.Color(51, 51, 0));
        contactinfoLable.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        contactinfoLable.setForeground(new java.awt.Color(0, 51, 51));
        contactinfoLable.setText("CONTACT Info.");

        employeeidlabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        employeeidlabel.setText("EMPLOYEE ID:");

        agelabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agelabel.setText("AGE:");

        startdateLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        startdateLabel.setText("START DATE:");

        levelLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        levelLabel.setText("LEVEL:");

        emailLable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        emailLable.setText("EMAIL:");

        CellphonLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CellphonLabel.setText("CELLPHINE NUMBER:");

        PhotoLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        PhotoLabel.setText("PHOTO:");

        genderLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        genderLabel.setText("GENDER:");

        employeeidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeidFieldActionPerformed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        nameLabel.setText("NAME:");

        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        searchButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchButtonKeyReleased(evt);
            }
        });

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        searchLable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        picLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picLabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchLable, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(220, 220, 220))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(agelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(startdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(levelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(contactinfoLable)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(24, 24, 24)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(emailLable, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(CellphonLabel)))
                                        .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(employeeidlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(98, 98, 98)))
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(photoField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(levelField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ageField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(employeeidField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nameField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(startdateField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cellphoneField)
                                            .addComponent(emailField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(genderField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(256, 256, 256)
                                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(128, 128, 128)
                                        .addComponent(viewBottun, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(382, 382, 382)
                                .addComponent(picLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(titleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton))
                    .addComponent(searchLable, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cellphoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLable, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(photoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deleteButton)
                                    .addComponent(viewBottun)
                                    .addComponent(updateButton))
                                .addGap(89, 89, 89))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(picLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameLabel)
                                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(employeeidField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employeeidlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(agelabel)
                                    .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startdateLabel)
                                    .addComponent(startdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(levelLabel)
                                    .addComponent(levelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(genderField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genderLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(contactinfoLable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CellphonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(67, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = userTable.getSelectedRow();
        if (selectedIndex < 0) {
            JOptionPane.showConfirmDialog(this, "Please select the employee", "Error", WIDTH);
        } else {
            DefaultTableModel model = (DefaultTableModel) userTable.getModel();
            User selecteUser = (User) model.getValueAt(selectedIndex, 0);
            users.removeuser(selecteUser);
            JOptionPane.showConfirmDialog(this, "Employee's Information is deleted", "Error", WIDTH, HEIGHT);
            poplutateTable();
        }
        //clearFields();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void employeeidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeidFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeidFieldActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        User selelctedUser;
        int selectedIndex = userTable.getSelectedRow();
        if (selectedIndex < 0) {
            JOptionPane.showConfirmDialog(this, "Please select the employee", "Error", WIDTH);
        } else {
            DefaultTableModel model = (DefaultTableModel) userTable.getModel();
            selelctedUser = (User) model.getValueAt(selectedIndex, 0);
            selelctedUser.setName(nameField.getText());
            selelctedUser.setEmployeeID(Integer.parseInt(employeeidField.getText()));
            selelctedUser.setAge(Integer.parseInt(ageField.getText()));
            selelctedUser.setGender(genderField.getText());
            selelctedUser.setStartdate(Long.parseLong(startdateField.getText()));
            selelctedUser.setLevel(levelField.getText());
            selelctedUser.setCellphonenumber(Long.parseLong(cellphoneField.getText()));
            selelctedUser.setEmail(emailField.getText());
            selelctedUser.setPhoto(photoField.getText());

            JOptionPane.showMessageDialog(this, "Selected Row Updated Carefully", "success", HEIGHT);
            poplutateTable();
        }

    }//GEN-LAST:event_updateButtonActionPerformed

    private void viewBottunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBottunActionPerformed
        // TODO add your handling code here:
        int selectedIndex = userTable.getSelectedRow();
        if (selectedIndex < 0) {
            JOptionPane.showConfirmDialog(this, "Please select the employee", "Error", WIDTH);
        } else {
            DefaultTableModel model = (DefaultTableModel) userTable.getModel();
            User selectedUser = (User) model.getValueAt(selectedIndex, 0);
            nameField.setText(selectedUser.getName());
            employeeidField.setText(String.valueOf(selectedUser.getEmployeeID()));
            ageField.setText(String.valueOf(selectedUser.getAge()));
            genderField.setText(selectedUser.getGender());
            startdateField.setText(String.valueOf(selectedUser.getStartdate()));
            levelField.setText(selectedUser.getLevel());
            cellphoneField.setText(String.valueOf(selectedUser.getCellphonenumber()));
            emailField.setText(selectedUser.getEmail());
            photoField.setText(selectedUser.getPhoto());

        }
    }//GEN-LAST:event_viewBottunActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel obj = (DefaultTableModel) userTable.getModel();
        int i;
        for (i = 0; i < obj.getRowCount(); i++) {
            if (searchField.getText().equals(obj.getValueAt(i, 1))) {

                JOptionPane.showConfirmDialog(this, "Data found", "success", WIDTH);
                break;
            }
        
        if(searchField.getText().equals(obj.getValueAt(i, 2))){
        JOptionPane.showConfirmDialog(this, "Data found", "success", WIDTH);
                
        }
        if(searchField.getText().equals(obj.getValueAt(i, 3))){
             JOptionPane.showConfirmDialog(this, "Data found", "success", WIDTH);
        }
        }
        if (i == obj.getRowCount()) {
            JOptionPane.showConfirmDialog(this, "Data Not Found", "Error", WIDTH);

            }   
            ////////////////////////////////second
            //User searchuser;
            //DefaultTableModel model=(DefaultTableModel) userTable.getModel();
            //int searchIndex=userTable.getSelectedRow();
            // int i;
            //for(i=0;i<model.getRowCount();i++){
            //if(searchField.getText().equals(model.getValueAt(i, 0))){
            //searchuser=(User) model.getValueAt(searchIndex, 0);
            //nameField.setText(searchuser.getName());
            //employeeidField.setText(String.valueOf(searchuser.getEmployeeID()));
            //levelField.setText(searchuser.getLevel());
            //JOptionPane.showMessageDialog(this, "Data Found", "success", HEIGHT);
            //poplutateTable();
            //}else{
            //  JOptionPane.showConfirmDialog(this, "Data not found", "Error", WIDTH);
            // }}
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchButtonKeyPressed
    }//GEN-LAST:event_searchButtonKeyPressed


    private void picLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_picLabelActionPerformed

    private void searchButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchButtonKeyReleased

    }//GEN-LAST:event_searchButtonKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CellphonLabel;
    private javax.swing.JLabel PhotoLabel;
    private javax.swing.JTextField ageField;
    private javax.swing.JLabel agelabel;
    private javax.swing.JTextField cellphoneField;
    private javax.swing.JLabel contactinfoLable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLable;
    private javax.swing.JTextField employeeidField;
    private javax.swing.JLabel employeeidlabel;
    private javax.swing.JTextField genderField;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField levelField;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField photoField;
    private javax.swing.JTextField picLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchLable;
    private javax.swing.JTextField startdateField;
    private javax.swing.JLabel startdateLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton updateButton;
    private javax.swing.JTable userTable;
    private javax.swing.JButton viewBottun;
    // End of variables declaration//GEN-END:variables

    public void poplutateTable() {
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        model.setRowCount(0);
        for (User u : users.getAllUser()) {
            Object[] row = new Object[3];
            row[0] = u;
            row[1] = u.getEmployeeID();
            row[2] = u.getLevel();
            model.addRow(row);

        }

        clearFields();
    }

    private void clearFields() {
        nameField.setText("");
        employeeidField.setText("");
        ageField.setText("");
        levelField.setText("");
        genderField.setText("");
        startdateField.setText("");
        emailField.setText("");
        photoField.setText("");
        cellphoneField.setText("");
    }

}
